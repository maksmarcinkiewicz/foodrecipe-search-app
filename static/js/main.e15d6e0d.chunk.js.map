{"version":3,"sources":["components/RecipeDetails.js","components/Recipe.js","components/Alert.js","App.js","index.js"],"names":["RecipeDetails","ingredients","map","ingredient","className","text","weight","toFixed","Math","ceil","uuidv4","Recipe","recipe","useState","show","setShow","label","image","url","src","alt","href","target","rel","onClick","Alert","alert","App","recipes","setRecpies","recipeName","setRecipeName","setAlert","getData","a","Axios","get","result","data","more","hits","console","log","onSubmit","e","preventDefault","type","placeholder","autoComplete","onChange","value","ReactDOM","render","document","getElementById"],"mappings":"wPAoBeA,EAjBO,SAAC,GAEnB,OAFqC,EAAjBC,YAEDC,KAAI,SAAAC,GACnB,OACI,qBAAmBC,UAAU,kBAA7B,UACI,oBAAIA,UAAU,kBAAd,SACKD,EAAWE,OAEhB,qBAAID,UAAU,oBAAd,UACKD,EAAWG,OAAS,EAAIH,EAAWG,OAAOC,QAAQ,GAAKC,KAAKC,KAAKN,EAAWG,QADjF,SAJKI,mBCgBNC,EApBA,SAAC,GAAc,IAAbC,EAAY,EAAZA,OAEb,EAAwBC,oBAAS,GAAjC,mBAAOC,EAAP,KAAaC,EAAb,KAEA,EAAyCH,EAAOA,OAAzCI,EAAP,EAAOA,MAAOC,EAAd,EAAcA,MAAOC,EAArB,EAAqBA,IAAKjB,EAA1B,EAA0BA,YAE1B,OACI,sBAAKG,UAAU,SAAf,UAEI,qBAAKe,IAAKF,EAAOG,IAAKJ,IACtB,6BAAKA,IACL,mBAAGK,KAAMH,EAAKI,OAAO,SAASC,IAAI,oBAAlC,6BAGA,wBAAQC,QAAS,kBAAMT,GAASD,IAAhC,yBACCA,GAAQ,cAAC,EAAD,CAAeb,YAAaA,QCRlCwB,EARD,SAAC,GAAa,IAAZC,EAAW,EAAXA,MACZ,OACI,qBAAKtB,UAAU,QAAf,SACI,6BAAKsB,OC2DFC,EAxDH,WAER,MAA8Bd,mBAAS,IAAvC,mBAAOe,EAAP,KAAgBC,EAAhB,KACA,EAAoChB,mBAAS,IAA7C,mBAAOiB,EAAP,KAAmBC,EAAnB,KACA,EAA0BlB,mBAAS,IAAnC,mBAAOa,EAAP,KAAcM,EAAd,KAIMd,EAAG,0CAAsCY,EAAtC,mBAFM,WAEN,oBADO,oCAGVG,EAAO,uCAAG,4BAAAC,EAAA,yDACM,KAAfJ,EADS,iCAEaK,IAAMC,IAAIlB,GAFvB,WAEFmB,EAFE,QAGGC,KAAKC,KAHR,yCAIGP,EAAS,2BAJZ,OAORH,EAAWQ,EAAOC,KAAKE,MACvBC,QAAQC,IAAIL,GACZN,EAAc,IATN,wBAWRC,EAAS,wBAXD,4CAAH,qDAwBb,OACI,eAAC,WAAD,WACA,qBAAK5B,UAAU,SAAf,SACA,sDAEA,sBAAKA,UAAU,MAAf,UAEI,uBAAMA,UAAU,cAAcuC,SAfrB,SAAAC,GACbA,EAAEC,iBACFZ,KAaI,UACe,KAAVP,GAAgB,cAAC,EAAD,CAAOA,MAAOA,IAC/B,uBAAOoB,KAAK,OAAOC,YAAY,gBAAgBC,aAAa,MAAMC,SAZ7D,SAAAL,GACbb,EAAca,EAAEtB,OAAO4B,QAWuEA,MAAOpB,IAC7F,uBAAOgB,KAAK,SAASI,MAAM,cAI/B,qBAAK9C,UAAU,UAAf,SACKwB,IAAY,IAAMA,EAAQ1B,KAAI,SAAAU,GAAM,OAAI,cAAC,EAAD,CAAuBA,OAAQA,GAAlBF,2BCnDtEyC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.e15d6e0d.chunk.js","sourcesContent":["import React from 'react'\nimport {v4 as uuidv4} from 'uuid'\n\nconst RecipeDetails = ({ingredients}) => {\n\n    return ingredients.map(ingredient => {\n        return (\n            <ul key={uuidv4()} className=\"ingredient-list\">\n                <li className=\"ingredient-text\">\n                    {ingredient.text}\n                </li>\n                <li className='ingredient-weight'>\n                    {ingredient.weight < 1 ? ingredient.weight.toFixed(2) : Math.ceil(ingredient.weight)}g\n                    \n                </li>\n            </ul>\n        )\n    })\n}\n\nexport default RecipeDetails\n","import React, {useState} from 'react'\nimport RecipeDetails from './RecipeDetails'\n\nconst Recipe = ({recipe}) => {\n    \n    const [show, setShow] = useState(false)\n\n    const {label, image, url, ingredients} = recipe.recipe\n    \n    return (\n        <div className='recipe'>\n            \n            <img src={image} alt={label} />\n            <h2>{label}</h2>\n            <a href={url} target='_blank' rel='noopener noreffer'>\n                FULL RECIPE URL\n            </a>\n            <button onClick={() => setShow(!show)}>Ingredients</button>\n            {show && <RecipeDetails ingredients={ingredients}/>}\n        </div>\n    )\n}\n\nexport default Recipe\n","import React from 'react'\n\nconst Alert = ({alert}) => {\n    return (\n        <div className=\"alert\">\n            <h3>{alert}</h3>\n        </div>\n    )\n}\n\nexport default Alert\n","import React, {Fragment, useState} from 'react'\nimport Axios from 'axios'\nimport \"./App.css\"\nimport {v4 as uuidv4} from 'uuid'\nimport Recipe from './components/Recipe'\nimport Alert from './components/Alert'\nimport { AiOutlineSearch } from 'react-icons/ai'\n\nconst App = () => {\n\n    const [recipes, setRecpies] = useState([])\n    const [recipeName, setRecipeName] = useState('')\n    const [alert, setAlert] = useState(\"\")\n\n    const app_id = \"b213a682\"\n    const app_key = \"2418ebd040a20738db42f53922ba1ce0\"\n    const url = `https://api.edamam.com/search?q=${recipeName}&app_id=${app_id}&app_key=${app_key}`\n\n    const getData = async () => {\n        if(recipeName !== \"\") {\n            const result = await Axios.get(url)\n            if(!result.data.more) {\n                return setAlert(\"No food with such name\")\n                \n            }\n            setRecpies(result.data.hits)\n            console.log(result)\n            setRecipeName('')\n        } else {\n            setAlert(\"Please fill the form\")\n        }\n        \n    }\n\n    const onSubmit = e => {\n        e.preventDefault()\n        getData()\n    }\n\n    const onChange = e => {\n        setRecipeName(e.target.value)\n    }\n    return (\n        <Fragment>\n        <div className=\"header\">\n        <h1>Food Searching App</h1>\n        </div>\n        <div className=\"App\">\n            \n            <form className='search-form' onSubmit={onSubmit}>\n                {alert !== \"\" && <Alert alert={alert} />}\n                <input type='text' placeholder='Search Recipe' autoComplete='off' onChange={onChange} value={recipeName}/>\n                <input type='submit' value='Search' ></input>\n                \n            </form>\n            \n            <div className='recipes'>\n                {recipes !== [] && recipes.map(recipe => <Recipe key={uuidv4()} recipe={recipe} />)}\n            </div>\n        </div>\n        </Fragment>\n    )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\n\n\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}